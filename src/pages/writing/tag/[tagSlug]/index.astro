---
import { getCollection } from "astro:content";

import BaseLayout from "@/components/layouts/Layout.Base.astro";
import TitleSection from "@/components/layouts/Section.Title.astro";
import WritingCollection from "@/components/layouts/writing/Collection.astro"

import Typography from "@/components/ui/Typography.astro";
import { arrangeContent } from "../../_helper";
import { shuffle } from "@/lib/utils/random-array";
import Chip from "@/components/ui/Chip.astro";

export async function getStaticPaths() {
    const notes = await getCollection("note");
    const blogs = await getCollection("note");  
    const tags = [
        ...new Set([
            ...notes.flatMap(n => n.data.tags),
            ...blogs.flatMap(b => b.data.tags)
        ])
    ]

    return tags.map(tag => ({
        params: {tagSlug: tag}
    }));
}

const DESCRIPTION = "The backyard of my mind, where pieces inter-connected."
const { tagSlug: tag } = Astro.params;

const blogs = (await getCollection("blog")).filter(
    b => b.data.tags.includes(tag!)
).toSorted(
    (b1, b2) => b2.data["created-date"].getTime() - b1.data["created-date"].getTime()
);
const notes = shuffle(
    (await getCollection("note")).filter(
        n => n.data.tags.includes(tag!)
    )
);
const writings = arrangeContent(notes, blogs);
---


<BaseLayout
    title={"Zane Chen - Mind Constellations"}
    description={DESCRIPTION}
>
    <TitleSection omitDivider>
        <Typography as="h1" variant="h3">Mind Constellations</Typography>
        <div class:list={["TitleContainer"]}>
            <Typography as="h2" variant="h6" color="secondary">{DESCRIPTION}</Typography>
            <span style={{ flex: "1 1" }}/>
            <Chip>
                <Typography variant="body1">#{tag}</Typography>
            </Chip>
        </div>
    </TitleSection>
    <WritingCollection writings={writings} hierachical/>
</BaseLayout>

<style>
    .TitleContainer {
        display: flex;
        flex-direction: row;
        align-items: center;
        pointer-events: none;
    }
</style>