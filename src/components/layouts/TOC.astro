---
import { type RenderResult } from 'astro:content';
import Typography from '@/components/ui/Typography.astro';

type MarkdownHeadings = RenderResult["headings"];

interface Props {
    headings: MarkdownHeadings;
}
const { headings } = Astro.props;
const shownDepths = [...new Set(headings.map(h => h.depth))].toSorted()
headings.forEach(h => h.depth = shownDepths.indexOf(h.depth));
---

<div class:list={["TOCContainer"]}>
    {
        headings.map(heading => (
            <a href={`#${heading.slug}`} id={`${heading.slug}_back`}
                class:list={["TOCItem"]}
                data-active={false}
                style={{ "--catagory-depth": heading.depth }}>
                <Typography variant='body1'>{heading.text}</Typography>
            </a>
        ))
    }
</div>


<style>
.TOCItem {
    padding: .25rem var(--spacing-paragraph) .25rem calc(var(--catagory-depth) * 1.5rem + var(--spacing-paragraph));
    background-color: transparent; 
    border-radius: var(--size-border-radius);
    transition: background-color var(--transition-short);

    &[data-active=true] {
        background-color: rgb(var(--color-default-foreground) / 25%);
    }
    &[data-active=false] {
        &:hover {
            background-color: rgb(var(--color-default-foreground) / 10%);
        }
    }
}

.TOCContainer {
    border-radius: var(--size-border-radius); 
    display: inline-flex; 
    flex-direction: column;
    border: 1px solid rgb(var(--color-default-foreground));
    padding: var(--spacing-paragraph); 
    margin-bottom: var(--spacing-paragraph); 
    flex: 0 1 content;
    gap: .5rem;

    overflow-y: scroll;
    &::-webkit-scrollbar {
        display: none
    }
}
</style>